CREATE DATABASE PIZZERIA;

CREATE TABLE PRODUCT_FAMILY(
	PRODFAM_ID CHAR(2) NOT NULL	UNIQUE,
	PRODFAM_DESC VARCHAR(50) NOT NULL,
	PRIMARY KEY (PRODFAM_ID)
);

CREATE TABLE INVENTORY_FAMILY(
	INVENTFAM_ID CHAR(2) NOT NULL UNIQUE,
	INVENTFAM_DESC CHAR(50) NOT NULL,
	PRIMARY KEY (INVENTFAM_ID)
);

CREATE TABLE STAGE(
	STAGE_ID CHAR(2) NOT NULL UNIQUE,
	STAGE_DESC VARCHAR(50) NOT NULL,
	PRIMARY KEY (STAGE_ID)
);

CREATE TABLE ROLE(
	ROLE_ID CHAR(2) NOT NULL UNIQUE,
	ROLE_DESC VARCHAR(50) NOT NULL,
	PRIMARY KEY (ROLE_ID)
);

CREATE TABLE CERTIFICATIONS(
	CERTIF_ID CHAR(2) NOT NULL UNIQUE,
	CERTIF_DESC VARCHAR(50) NOT NULL,
	PRIMARY KEY (CERTIF_ID)
);

CREATE TABLE DEGREE(
	DEGREE_ID CHAR(2) NOT NULL UNIQUE,
	DEGREE_DESC VARCHAR(50) NOT NULL,
	PRIMARY KEY (DEGREE_ID)
);

CREATE TABLE SHIFTS(
	SHIFT_ID CHAR(2) NOT NULL UNIQUE,
	SHIFT_START_DATE_TIME DATETIME NOT NULL,
	SHIFT_END_DATE_TIME DATETIME NOT NULL,
    PRIMARY KEY (SHIFT_ID)
);

CREATE TABLE EMPLOYEE(
	EMP_ID CHAR(2) NOT NULL UNIQUE,
	F_NAME VARCHAR(15) NOT NULL,
	L_NAME VARCHAR(15) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	EMP_ADDRESS VARCHAR(30) NOT NULL,
	EMP_STATUS VARCHAR(30) NOT NULL,
	EMP_TYPE VARCHAR(10) NOT NULL,
	PRIMARY KEY (EMP_ID)
);

CREATE TABLE JOB_HIST(
	EMP_ID CHAR(2) NOT NULL,
	ROLE_ID CHAR(2) NOT NULL,
	START_DAY DATE NOT NULL,
	END_DAY DATE NOT NULL,
	PRIMARY KEY (EMP_ID, ROLE_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID) ON DELETE CASCADE,
	FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID) ON DELETE CASCADE,
	CONSTRAINT BRIDGE_UI1 UNIQUE(EMP_ID, ROLE_ID)
);

CREATE TABLE PRODUCT_SUBFAMILY(
	SUBFAM_ID CHAR(2) NOT NULL UNIQUE,
	SUBFAM_DESC VARCHAR(30) NOT NULL,
	PRODFAM_ID CHAR(2) NOT NULL,
	PRIMARY KEY (SUBFAM_ID),
	FOREIGN KEY (PRODFAM_ID) REFERENCES PRODUCT_FAMILY ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PRODUCTS(
	PROD_ID CHAR(2) NOT NULL UNIQUE,
	PROD_DESC VARCHAR(50) NOT NULL,
	QUANTITY INT NOT NULL,
	PRICE MONEY NOT NULL,
	SUBFAM_ID CHAR(2) NOT NULL,
	PRIMARY KEY (PROD_ID),
	FOREIGN KEY (SUBFAM_ID) REFERENCES PRODUCT_SUBFAMILY ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE INVENTORY_SUBFAM(
	INV_SUBFAM_ID CHAR(2) NOT NULL UNIQUE,
	INV_SUBFAM_DESC VARCHAR(50) NOT NULL,
	INVENTFAM_ID CHAR(2) NOT NULL,
	PRIMARY KEY (INV_SUBFAM_ID),
	FOREIGN KEY (INVENTFAM_ID) REFERENCES INVENTORY_FAMILY ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE VENDOR(
	VENDOR_ID CHAR(2) NOT NULL UNIQUE,
	VENDOR_NAME VARCHAR(50) NOT NULL,
	CONTACT_NUMBER VARCHAR(15) NOT NULL,
	VENDOR_ADDRESS VARCHAR(50) NOT NULL,
	VENDOR_EMAIL VARCHAR(50) NOT NULL,
	PRIMARY KEY (VENDOR_ID)
);

CREATE TABLE INVENTORY(
	INVENTORY_ID CHAR(2) NOT NULL UNIQUE,
	INVENTORY_AMOUNT INT NOT NULL,
	VENDOR_ID CHAR(2) NOT NULL,
	INV_SUBFAM_ID CHAR(2) NOT NULL,
	PRIMARY KEY (INVENTORY_ID),
	FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (INV_SUBFAM_ID) REFERENCES INVENTORY_SUBFAM ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE RECIPE(
	PROD_ID CHAR(2) NOT NULL,
	INVENTORY_ID CHAR(2) NOT NULL,
	REQUIREMENTS VARCHAR(255) NOT NULL
	PRIMARY KEY (PROD_ID, INVENTORY_ID)
	FOREIGN KEY (PROD_ID) REFERENCES PRODUCTS (PROD_ID) ON DELETE CASCADE,
	FOREIGN KEY (INVENTORY_ID) REFERENCES INVENTORY (INVENTORY_ID) ON DELETE CASCADE,
	CONSTRAINT BRIDGE_UI2 UNIQUE(PROD_ID, INVENTORY_ID)
);

CREATE TABLE CUSTOMER(
	CUST_ID CHAR(2) NOT NULL UNIQUE,
	F_NAME VARCHAR(15) NOT NULL,
	L_NAME VARCHAR(15) NOT NULL,
	CUST_ADDRESS VARCHAR(50) NOT NULL,
	CUST_PHONE VARCHAR(15) NOT NULL
	PRIMARY KEY (CUST_ID)
);

CREATE TABLE PG_CARD(
	PG_ID CHAR(2) NOT NULL UNIQUE,
	POINTS INT NOT NULL,
	CUST_ID CHAR(2) NOT NULL UNIQUE,
	PRIMARY KEY (PG_ID),
	FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE ORDERS(
	ORDER_ID CHAR(2) NOT NULL UNIQUE,
	PAYMENT_TYPE VARCHAR(20) NOT NULL,
	ORDER_DATE_TIME DATETIME NOT NULL,
	TOTAL_PRICE MONEY NOT NULL,
	CUST_ID CHAR(2) NOT NULL,
	EMP_ID CHAR(2) NOT NULL,
	PRIMARY KEY (ORDER_ID),
	FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE ORDER_DETAILS(
	ORDER_DETAIL_ID CHAR(2) NOT NULL UNIQUE,
	SELLING_PRICE MONEY NOT NULL,
	PROD_ID CHAR(2) NOT NULL,
	ORDER_ID CHAR(2) NOT NULL,
    QTY INT NOT NULL,
	PRIMARY KEY (ORDER_DETAIL_ID),
	FOREIGN KEY (PROD_ID) REFERENCES PRODUCTS ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (ORDER_ID) REFERENCES ORDERS ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CURRENT_STAGE(
	ORDER_DETAIL_ID CHAR(2) NOT NULL,
	STAGE_ID CHAR(2) NOT NULL,
	PRIMARY KEY (ORDER_DETAIL_ID, STAGE_ID),
	FOREIGN KEY (ORDER_DETAIL_ID) REFERENCES ORDER_DETAILS (ORDER_DETAIL_ID) ON DELETE CASCADE,
	FOREIGN KEY (STAGE_ID) REFERENCES STAGE (STAGE_ID) ON DELETE CASCADE
);

CREATE TABLE WAGES(
	EMP_ID CHAR(2) NOT NULL UNIQUE,
	HOURLY_WAGE MONEY NOT NULL
	PRIMARY KEY (EMP_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PUNCHES(
	EMP_ID CHAR(2) NOT NULL,
	SHIFT_ID CHAR(2) NOT NULL,
	CLOCKIN_DT DATETIME NOT NULL,
	CLOCKOUT_DT DATETIME NOT NULL,
	PRIMARY KEY (EMP_ID, SHIFT_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID) ON DELETE CASCADE,
	FOREIGN KEY (SHIFT_ID) REFERENCES SHIFTS (SHIFT_ID) ON DELETE CASCADE,
	CONSTRAINT BRIDGE_UI3 UNIQUE(EMP_ID, SHIFT_ID)
);

CREATE TABLE SALARY(
	EMP_ID CHAR(2) NOT NULL UNIQUE,
	SALARY_AMOUNT MONEY NOT NULL,
	SALARY_TYPE VARCHAR(50) NOT NULL,
	PRIMARY KEY (EMP_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CHEF(
	EMP_ID CHAR(2) NOT NULL UNIQUE,
	PRIMARY KEY (EMP_ID),
	FOREIGN KEY (EMP_ID) REFERENCES SALARY ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE MANAGER(
	EMP_ID CHAR(2) NOT NULL UNIQUE,
	PRIMARY KEY (EMP_ID),
	FOREIGN KEY (EMP_ID) REFERENCES SALARY ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE MANAGER_DEGREE(
	EMP_ID CHAR(2) NOT NULL,
	DEGREE_ID CHAR(2) NOT NULL,
	PRIMARY KEY (EMP_ID, DEGREE_ID),
	FOREIGN KEY (EMP_ID) REFERENCES MANAGER ON DELETE CASCADE,
	FOREIGN KEY (DEGREE_ID) REFERENCES DEGREE ON DELETE CASCADE,
	CONSTRAINT BRIDGE_UI4 UNIQUE(EMP_ID, DEGREE_ID)
);

CREATE TABLE CHEF_CERTIFICATIONS(
	EMP_ID CHAR(2) NOT NULL,
	CERTIF_ID CHAR(2) NOT NULL,
	PRIMARY KEY (EMP_ID, CERTIF_ID),
	FOREIGN KEY (EMP_ID) REFERENCES CHEF ON DELETE CASCADE,
	FOREIGN KEY (CERTIF_ID) REFERENCES CERTIFICATIONS ON DELETE CASCADE,
	CONSTRAINT BRIDGE_UI5 UNIQUE(EMP_ID, CERTIF_ID)
);